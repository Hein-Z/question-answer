<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Answer extends Model
{
    use HasFactory;

    protected $fillable = ['question_id', 'user_id', 'body'];

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function question()
    {
        return $this->belongsTo(Question::class);
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($answer) {
            $answer->question->increment('answers_count');
        });

        static::deleted(function ($answer) {
            $answer->question->decrement('answers_count');
        });
    }

    public function getCreatedDateAttribute()
    {
        return $this->created_at->diffForHumans();
    }

    public function getGravatorAttribute()
    {
        $size = 35;
        $email = $this->user->email;
        $grav_url = "https://www.gravatar.com/avatar/" . md5(strtolower(trim($email))) . "s=" . $size;
        return $grav_url;
    }

    public function isBestAnswer()
    {
        return $this->id === $this->question->best_answer_id;
    }

    public function getStatusAttribute()
    {
        return $this->isBestAnswer() ? 'favorited' : '';
    }

    public function votes()
    {
        return $this->morphToMany(User::class, 'votable');
    }
}
